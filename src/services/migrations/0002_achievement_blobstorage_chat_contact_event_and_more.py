# Generated by Django 5.0.3 on 2024-03-26 16:31

import django.contrib.postgres.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('services', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('achievement', models.CharField(max_length=250, primary_key=True, serialize=False)),
                ('date', models.DateField()),
            ],
            options={
                'db_table': 'achievement',
            },
        ),
        migrations.CreateModel(
            name='BlobStorage',
            fields=[
                ('Object_ID', models.AutoField(primary_key=True, serialize=False)),
                ('Date', models.DateField()),
                ('Type', models.CharField(choices=[('type1', 'Type 1'), ('type2', 'Type 2'), ('type3', 'Type 3')], max_length=30)),
                ('Description', models.CharField(max_length=30)),
                ('Url', models.CharField(max_length=100)),
                ('Skill_type', models.CharField(choices=[('skill1', 'Skill 1'), ('skill2', 'Skill 2'), ('skill3', 'Skill 3')], max_length=30)),
            ],
            options={
                'db_table': 'blob_storage',
            },
        ),
        migrations.CreateModel(
            name='Chat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chat_id', models.CharField(max_length=100)),
                ('chat_name', models.CharField(max_length=100)),
                ('members', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), size=None)),
            ],
            options={
                'db_table': 'chat',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('email', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('phone', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'contact',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('Event_ID', models.AutoField(primary_key=True, serialize=False)),
                ('Content', models.CharField(max_length=200)),
                ('Time_Post', models.DateTimeField()),
                ('Like', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, size=None)),
            ],
            options={
                'db_table': 'event',
            },
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('topic', models.CharField(max_length=150, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('description', models.TextField()),
            ],
            options={
                'db_table': 'experience',
            },
        ),
        migrations.CreateModel(
            name='IsVerified',
            fields=[
                ('Verified_ID', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'is_verified',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('Noti_ID', models.AutoField(primary_key=True, serialize=False)),
                ('content', models.CharField(max_length=200)),
                ('Type', models.CharField(choices=[('type1', 'Type 1'), ('type2', 'Type 2'), ('type3', 'Type 3')], max_length=10)),
            ],
            options={
                'db_table': 'notification',
            },
        ),
        migrations.CreateModel(
            name='PhysicalAttribute',
            fields=[
                ('date', models.DateTimeField(primary_key=True, serialize=False)),
                ('height', models.IntegerField()),
                ('speed', models.IntegerField()),
                ('fat_mass', models.DecimalField(decimal_places=2, max_digits=4)),
                ('muscle_mass', models.DecimalField(decimal_places=2, max_digits=4)),
                ('weight', models.DecimalField(decimal_places=1, max_digits=4)),
            ],
            options={
                'db_table': 'physical_attribute',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('Post_ID', models.AutoField(primary_key=True, serialize=False)),
                ('Date_Post', models.DateField()),
                ('Time_Post', models.TimeField()),
                ('Description', models.CharField(max_length=200)),
                ('Like', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, size=None)),
            ],
            options={
                'db_table': 'post',
            },
        ),
        migrations.CreateModel(
            name='Scout',
            fields=[
                ('User_ID', models.CharField(max_length=16, primary_key=True, serialize=False)),
                ('Hometown', models.CharField(choices=[('Amnat Charoen', 'Amnat Charoen'), ('Ang Thong', 'Ang Thong'), ('Bangkok', 'Bangkok'), ('Bueng Kan', 'Bueng Kan'), ('Buri Ram', 'Buri Ram'), ('Chachoengsao', 'Chachoengsao'), ('Chai Nat', 'Chai Nat'), ('Chaiyaphum', 'Chaiyaphum'), ('Chanthaburi', 'Chanthaburi'), ('Chiang Mai', 'Chiang Mai'), ('Chiang Rai', 'Chiang Rai'), ('Chon Buri', 'Chon Buri'), ('Chumphon', 'Chumphon'), ('Kalasin', 'Kalasin'), ('Kamphaeng Phet', 'Kamphaeng Phet'), ('Kanchanaburi', 'Kanchanaburi'), ('Khon Kaen', 'Khon Kaen'), ('Krabi', 'Krabi'), ('Lampang', 'Lampang'), ('Lamphun', 'Lamphun'), ('Loei', 'Loei'), ('Lopburi', 'Lopburi'), ('Mae Hong Son', 'Mae Hong Son'), ('Maha Sarakham', 'Maha Sarakham'), ('Mukdahan', 'Mukdahan'), ('Nakhon Nayok', 'Nakhon Nayok'), ('Nakhon Pathom', 'Nakhon Pathom'), ('Nakhon Phanom', 'Nakhon Phanom'), ('Nakhon Ratchasima', 'Nakhon Ratchasima'), ('Nakhon Sawan', 'Nakhon Sawan'), ('Nakhon Si Thammarat', 'Nakhon Si Thammarat'), ('Nan', 'Nan'), ('Narathiwat', 'Narathiwat'), ('Nong Bua Lam Phu', 'Nong Bua Lam Phu'), ('Nong Khai', 'Nong Khai'), ('Nonthaburi', 'Nonthaburi'), ('Pathum Thani', 'Pathum Thani'), ('Pattani', 'Pattani'), ('Phangnga', 'Phangnga'), ('Phatthalung', 'Phatthalung'), ('Phayao', 'Phayao'), ('Phetchabun', 'Phetchabun'), ('Phetchaburi', 'Phetchaburi'), ('Phichit', 'Phichit'), ('Phitsanulok', 'Phitsanulok'), ('Phra Nakhon Si Ayutthaya', 'Phra Nakhon Si Ayutthaya'), ('Phrae', 'Phrae'), ('Phuket', 'Phuket'), ('Prachin Buri', 'Prachin Buri'), ('Prachuap Khiri Khan', 'Prachuap Khiri Khan'), ('Ranong', 'Ranong'), ('Ratchaburi', 'Ratchaburi'), ('Rayong', 'Rayong'), ('Roi Et', 'Roi Et'), ('Sa Kaeo', 'Sa Kaeo'), ('Sakon Nakhon', 'Sakon Nakhon'), ('Samut Prakan', 'Samut Prakan'), ('Samut Sakhon', 'Samut Sakhon'), ('Samut Songkhram', 'Samut Songkhram'), ('Saraburi', 'Saraburi'), ('Satun', 'Satun'), ('Sing Buri', 'Sing Buri'), ('Sisaket', 'Sisaket'), ('Songkhla', 'Songkhla'), ('Sukhothai', 'Sukhothai'), ('Suphan Buri', 'Suphan Buri'), ('Surat Thani', 'Surat Thani'), ('Surin', 'Surin'), ('Tak', 'Tak'), ('Trang', 'Trang'), ('Trat', 'Trat'), ('Ubon Ratchathani', 'Ubon Ratchathani'), ('Udon Thani', 'Udon Thani'), ('Uthai Thani', 'Uthai Thani'), ('Uttaradit', 'Uttaradit'), ('Yala', 'Yala'), ('Yasothon', 'Yasothon')], max_length=30)),
                ('Birthdate', models.DateField()),
                ('Age', models.IntegerField()),
            ],
            options={
                'db_table': 'scout',
            },
        ),
        migrations.CreateModel(
            name='Verified',
            fields=[
                ('Verified_ID', models.IntegerField(primary_key=True, serialize=False)),
                ('Status', models.BooleanField()),
                ('Type', models.CharField(choices=[('type1', 'Type 1'), ('type2', 'Type 2'), ('type3', 'Type 3')], max_length=10)),
            ],
            options={
                'db_table': 'Verified',
            },
        ),
        migrations.CreateModel(
            name='Owns',
            fields=[
                ('chat_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='services.chat')),
            ],
            options={
                'db_table': 'owns',
            },
        ),
        migrations.CreateModel(
            name='HaveProfilePic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Object_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.blobstorage')),
            ],
            options={
                'db_table': 'HaveProfilePic',
            },
        ),
        migrations.AddField(
            model_name='blobstorage',
            name='Vefified_ID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.isverified'),
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('message_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField()),
                ('content', models.TextField()),
                ('sender_id', models.CharField(max_length=100)),
                ('chat_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.chat')),
            ],
            options={
                'db_table': 'message',
            },
        ),
        migrations.CreateModel(
            name='HaveAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Object_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.blobstorage')),
                ('Message_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.message')),
            ],
            options={
                'db_table': 'Have_Attachment',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('Comment_ID', models.AutoField(primary_key=True, serialize=False)),
                ('Date', models.DateField()),
                ('Commenter_User_ID', models.CharField(max_length=16)),
                ('Like', models.JSONField(null=True)),
                ('Comment_Data', models.CharField(max_length=200)),
                ('Post_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.post')),
            ],
            options={
                'db_table': 'comment',
            },
        ),
        migrations.AddField(
            model_name='blobstorage',
            name='Post_ID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.post'),
        ),
    ]
